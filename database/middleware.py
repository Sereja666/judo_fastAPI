# middleware.py
from fastapi import Request, HTTPException
from fastapi.responses import RedirectResponse
import httpx
import json

class SupersetAuthMiddleware:
    def __init__(self, app, superset_base_url: str):
        self.app = app
        self.superset_base_url = superset_base_url

    async def __call__(self, request: Request, call_next):
        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ health checks
        if any(request.url.path.startswith(path) for path in ["/static/", "/health", "/debug"]):
            return await call_next(request)

        # –ü–æ–ª—É—á–∞–µ–º —Å–µ—Å—Å–∏–æ–Ω–Ω—É—é –∫—É–∫—É
        session_cookie = request.cookies.get("session")
        
        print(f"üîπ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –ø—É—Ç–∏: {request.url.path}")
        print(f"üîπ –°–µ—Å—Å–∏–æ–Ω–Ω–∞—è –∫—É–∫–∞: {'–µ—Å—Ç—å' if session_cookie else '–Ω–µ—Ç'}")
        print(f"üîπ –í—Å–µ –∫—É–∫–∏: {dict(request.cookies)}")
        print(f"üîπ Referer: {request.headers.get('referer')}")

        # –ï—Å–ª–∏ –∫—É–∫–∞ –µ—Å—Ç—å, –ø—Ä–æ–≤–µ—Ä—è–µ–º –µ—ë –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ Superset API
        if session_cookie:
            try:
                is_valid = await self.validate_superset_session(session_cookie)
                if is_valid:
                    print("‚úÖ –°–µ—Å—Å–∏—è –≤–∞–ª–∏–¥–Ω–∞, –¥–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω")
                    return await call_next(request)
                else:
                    print("‚ùå –°–µ—Å—Å–∏—è –Ω–µ–≤–∞–ª–∏–¥–Ω–∞")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏: {e}")

        # –ï—Å–ª–∏ –∫—É–∫–∏ –Ω–µ—Ç –∏–ª–∏ –æ–Ω–∞ –Ω–µ–≤–∞–ª–∏–¥–Ω–∞ - —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ –ª–æ–≥–∏–Ω Superset
        print("üîπ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ Superset")
        login_url = f"{self.superset_base_url}/login/?next={request.url}"
        return RedirectResponse(url=login_url)

    async def validate_superset_session(self, session_cookie: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤–∞–ª–∏–¥–Ω–æ—Å—Ç—å —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ Superset API"""
        try:
            async with httpx.AsyncClient() as client:
                # –°–æ–∑–¥–∞–µ–º –∫—É–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
                cookies = {"session": session_cookie}
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á–µ—Ä–µ–∑ endpoint —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                response = await client.get(
                    f"{self.superset_base_url}/api/v1/security/current",
                    cookies=cookies,
                    timeout=10.0
                )
                
                if response.status_code == 200:
                    user_data = response.json()
                    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_data.get('username', 'Unknown')}")
                    return True
                
                print(f"‚ùå Superset API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                return False
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–µ—Å—Å–∏–∏ Superset: {e}")
            return False